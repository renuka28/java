<?xml version='1.0' encoding='utf-8'?>
<!--
  ~ Hibernate, Relational Persistence for Idiomatic Java
  ~
  ~ License: GNU Lesser General Public License (LGPL), version 2.1 or later.
  ~ See the lgpl.txt file in the root directory or <http://www.gnu.org/licenses/lgpl-2.1.html>.
  -->
<!DOCTYPE hibernate-configuration PUBLIC
"-//Hibernate/Hibernate Configuration DTD//EN"
"http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd">
 
<hibernate-configuration>
    <session-factory>    
    

    	<!--To switch between the databases, just replace the next few lines with corresponding lines from *_mysql.xml/*_pg.xml  -->
           <!-- mysql configurations- setup hibernatedb again if you are using docker -->        
           
    	<property name="hibernate.connection.driver_class">org.postgresql.Driver</property>
        <property name="hibernate.connection.url">jdbc:postgresql://localhost:15432/hibernatedb</property>
        <property name="hibernate.connection.username">postgres</property>
        <property name="hibernate.connection.password">welcome123</property>
        <property name="connection.pool_size">5</property>
        <property name="dialect">org.hibernate.dialect.ProgressDialect</property>

     
        <!-- <property name="show_sql">true</property> -->
        <!-- Set to update if you don't want the tables to be dropped 
        <property name="hbm2ddl.auto">update</property> -->
        <property name="show_sql">true</property>
        <property name="hbm2ddl.auto">create</property>   
        
        <!-- Update for second level caches  -->     
        <!-- <property name="cache.provider.class">org.hibernate.cache.NoCacheProvider</property> -->
        <property name="cache.use_second_level_cache">true</property>
        <property name="cache.use_query_cache">true</property>        
        <property name="cache.provider.class">org.hibernate.cache.EhCacheProvider</property>
        <property name="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.internal.EhcacheRegionFactory</property>
        
                
		<!-- our model classes -->
		
        <mapping class="org.renuka.learn.java.hibernate.dto.UserDetails"/>
        <mapping class="org.renuka.learn.java.hibernate.dto.UserDetails2"/>
        <mapping class="org.renuka.learn.java.hibernate.dto.UserDetails3"/>
        <mapping class="org.renuka.learn.java.hibernate.dto.UserDetails4"/>
        <mapping class="org.renuka.learn.java.hibernate.dto.UserDetails5"/>
        <mapping class="org.renuka.learn.java.hibernate.dto.UserDetails6"/>
        <mapping class="org.renuka.learn.java.hibernate.dto.UserDetails7"/>
        <mapping class="org.renuka.learn.java.hibernate.dto.UserDetailsOneToOneMapping"/>
        <mapping class="org.renuka.learn.java.hibernate.dto.UserDetailsOneToManyToOneMapping"/>
        <mapping class="org.renuka.learn.java.hibernate.dto.UserDetailsManyToMany"/>
        <mapping class="org.renuka.learn.java.hibernate.dto.UserDetailsCascadeTypes"/>
        
        <mapping class="org.renuka.learn.java.hibernate.dto.Vehicle"/>
        <mapping class="org.renuka.learn.java.hibernate.dto.VehicleOneToMany"/>
        <mapping class="org.renuka.learn.java.hibernate.dto.VehicleManyToMany"/>
        <mapping class="org.renuka.learn.java.hibernate.dto.VehicleCascadeTypes"/>
        
        <mapping class="org.renuka.learn.java.hibernate.dto.VehicleSingleTable"/>
        <mapping class="org.renuka.learn.java.hibernate.dto.FourWheelerSingleTable"/>
        <mapping class="org.renuka.learn.java.hibernate.dto.TwoWheelerSingleTable"/>
        
        <mapping class="org.renuka.learn.java.hibernate.dto.VehicleTablePerClass"/>        
        <mapping class="org.renuka.learn.java.hibernate.dto.TwoWheelerTablePerClass"/>        
        <mapping class="org.renuka.learn.java.hibernate.dto.FourWheelerTablePerClass"/>
        
        <mapping class="org.renuka.learn.java.hibernate.dto.VehicleJoinedTable"/>        
        <mapping class="org.renuka.learn.java.hibernate.dto.TwoWheelerJoinedTable"/>        
        <mapping class="org.renuka.learn.java.hibernate.dto.FourWheelerJoinedTable"/>   
      
        <mapping class="org.renuka.learn.java.hibernate.dto.UserDetailsCrud"/>
                
    </session-factory>
 
</hibernate-configuration>

